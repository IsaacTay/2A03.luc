module segment_display #(
    DIGITS = 1: DIGITS > 0
  ) (
    input clk,  // clock
    input rst,
    input in[$clog2($pow(10, DIGITS) - 1)],
    output sel[DIGITS],
    output seg[8]
  ) {
  
  .clk(clk) {
    .rst(rst) {
      counter ctr (#DIV(16), #SIZE($clog2(DIGITS) | (DIGITS == 1)), #TOP(DIGITS-1));  // DIV 16
    }
  }
  var i, i2, pow, current;
  sig digits[4];

  always {
    sel = 0;
    seg = 0;
    
    sel[ctr.value] = 1;
    if (DIGITS == 1) {
      sel = 1;
    }
      
    i2 = 0;
    pow = $pow(10, DIGITS-1);
    current = 0;
    digits = 0;
    for (i = 0; i < DIGITS; i++) {
      for (i2 = 0; i2 < 10; i2++) {
        if (current + pow <= in) {
          current = current + pow;
          if (DIGITS - 1 - i == ctr.value) {
            digits = i2 + 1;
          } //digits[3 - i] = i2 + 1;
        }
      }
      pow = pow / 10;
    }
    
    case (digits) {
      0: seg = 7b0111111;
      1: seg = 7b0000110;
      2: seg = 7b1011011;
      3: seg = 7b1001111;
      4: seg = 7b1100110;
      5: seg = 7b1101101;
      6: seg = 7b1111101;
      7: seg = 7b0000111;
      8: seg = 7b1111111;
      9: seg = 7b1100111;
      default: seg = 7b0000000;
    }
  }
}
